[{"E:\\www\\typescript-test\\src\\index.tsx":"1","E:\\www\\typescript-test\\src\\reportWebVitals.ts":"2","E:\\www\\typescript-test\\src\\containers\\App\\index.tsx":"3","E:\\www\\typescript-test\\src\\components\\Chart\\index.tsx":"4","E:\\www\\typescript-test\\src\\containers\\App\\styles.ts":"5","E:\\www\\typescript-test\\src\\components\\IdeaCard\\styles.ts":"6","E:\\www\\typescript-test\\src\\components\\IdeaCard\\data.ts":"7","E:\\www\\typescript-test\\src\\components\\IdeaCard\\index.tsx":"8"},{"size":527,"mtime":1612050597114,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1612028799033,"results":"11","hashOfConfig":"10"},{"size":816,"mtime":1612045900454,"results":"12","hashOfConfig":"10"},{"size":1846,"mtime":1612050366441,"results":"13","hashOfConfig":"10"},{"size":108,"mtime":1612039136123,"results":"14","hashOfConfig":"10"},{"size":1559,"mtime":1612046430832,"results":"15","hashOfConfig":"10"},{"size":990,"mtime":1612050261197,"results":"16","hashOfConfig":"10"},{"size":2898,"mtime":1612046293767,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yl7mfy",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\www\\typescript-test\\src\\index.tsx",[],"E:\\www\\typescript-test\\src\\reportWebVitals.ts",["36"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","E:\\www\\typescript-test\\src\\containers\\App\\index.tsx",[],"E:\\www\\typescript-test\\src\\components\\Chart\\index.tsx",[],"E:\\www\\typescript-test\\src\\containers\\App\\styles.ts",[],"E:\\www\\typescript-test\\src\\components\\IdeaCard\\styles.ts",["37","38"],"import { makeStyles, createStyles } from '@material-ui/core/styles';\r\nexport const useStyles = makeStyles((theme: any) => createStyles(\r\n\r\n{\r\n    card: {\r\n        width: '320px',\r\n        padding: '22px 18px 18px',\r\n        borderRadius: '15px',\r\n        minHeight: 'auto',\r\n        fontFamily: 'san-serif !important'\r\n    },\r\n    heading: {\r\n        fontWeight: 600,\r\n        lineHeight: '24px',\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: '8px 0',\r\n        alignItems: 'center'\r\n    },\r\n    cardHeading: {\r\n        fontSize: '14px',\r\n    },\r\n    flex : {\r\n        display: 'flex',\r\n        padding: '0',\r\n        alignItems: 'center'\r\n    },\r\n    cardButton: {\r\n        borderRadius: '16px',\r\n        padding: '3px 10px',\r\n        fontSize: '14px',\r\n        textTransform: 'capitalize',\r\n        minWidth: 'auto',\r\n        minHeight: 'auto'\r\n    },\r\n    cardAmount: {\r\n        position: 'relative',\r\n        fontWeight: 'bold',\r\n        left: '-6px',\r\n        fontSize: '16px'\r\n    },\r\n    percentage: {\r\n        fontWeight: 'bold',\r\n        fontSize: '12px'\r\n    },\r\n    userImage: {\r\n        width: '32px',\r\n        height: '32px',\r\n    },\r\n    postDate : {\r\n        color: 'gray'\r\n    },\r\n    margins: {\r\n        margin: '0 4px'\r\n    },\r\n    btnLike: {\r\n        borderRadius: '30px',\r\n        fontWeight: 'bold',\r\n        color: 'gray',\r\n        minWidth: 'auto',\r\n        minHeight: 'auto',\r\n        padding: '5px 10px'\r\n    },\r\n    padding: {\r\n        padding: '16px 0 0 0'\r\n    }\r\n}\r\n));","E:\\www\\typescript-test\\src\\components\\IdeaCard\\data.ts",[],"E:\\www\\typescript-test\\src\\components\\IdeaCard\\index.tsx",[],{"ruleId":"39","severity":1,"message":"40","line":3,"column":25,"nodeType":"41","messageId":"42","endLine":3,"endColumn":57},{"ruleId":"43","severity":1,"message":"44","line":2,"column":38,"nodeType":"45","messageId":"46","endLine":2,"endColumn":48},{"ruleId":"47","severity":1,"message":"48","line":2,"column":45,"nodeType":"49","messageId":"50","endLine":2,"endColumn":48,"suggestions":"51"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'theme' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["52","53"],{"messageId":"54","fix":"55","desc":"56"},{"messageId":"57","fix":"58","desc":"59"},"suggestUnknown",{"range":"60","text":"61"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"60","text":"62"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[114,117],"unknown","never"]